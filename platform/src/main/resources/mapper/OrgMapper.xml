<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oa.platform.repository.OrgRepository" >
	<resultMap id="orgMap" type="com.oa.platform.entity.Organization">
		<result column="org_id" property="orgId" jdbcType="VARCHAR"/>
		<result column="org_nm" property="orgName" jdbcType="VARCHAR"/>
		<result column="is_leaf" property="isLeaf" jdbcType="VARCHAR"/>
		<result column="phone" property="phone" jdbcType="VARCHAR"/>
		<result column="upper_org" property="upperOrg" jdbcType="VARCHAR"/>
		<result column="upper_org_name" property="upperOrgName" jdbcType="VARCHAR"/>
		<result column="found_time" property="foundTime" jdbcType="VARCHAR"/>
		<result column="trans_code" property="transCode" jdbcType="VARCHAR"/>
		<result column="fix_phone" property="fixPhone" jdbcType="VARCHAR"/>
		<result column="address" property="address" jdbcType="VARCHAR"/>
		<result column="is_dept" property="isDept" jdbcType="VARCHAR"/>
		<result column="leader" property="leader" jdbcType="VARCHAR"/>
		<result column="org_type" property="orgType" jdbcType="VARCHAR"/>
		<result column="org_code" property="orgCode" jdbcType="VARCHAR"/>
		<result column="org_address_relation" property="orgAddressRelation" jdbcType="VARCHAR"/>
		<result column="elct_Type" property="elctType" jdbcType="VARCHAR"/>
		<result column="lead_time" property="leadTime" jdbcType="VARCHAR"/>
		<result column="current_leader_time" property="currentLeaderTime" jdbcType="VARCHAR"/>
		<result column="current_lead_out_time" property="currentLeadOutTime" jdbcType="VARCHAR"/>
		<result column="elct_shoud_people_count" property="elctShoudPeopleCount" jdbcType="INTEGER"/>
		<result column="elct_act_people_count" property="elctActPeopleCount" jdbcType="INTEGER"/>
		<result column="upper_sure_org_count" property="upperSureOrgCount" jdbcType="INTEGER"/>
		<result column="act_upper_org_per_count" property="actUpperOrgPerCount" jdbcType="INTEGER"/>
		<result column="change_org_relation_auth" property="changeOrgRelationAuth" jdbcType="VARCHAR"/>
		<result column="is_del_part_person_auth" property="isDelPartPersonAuth" jdbcType="VARCHAR"/>
		<result column="concat_persion" property="concatPersion" jdbcType="VARCHAR"/>
		<result column="org_job_phone" property="orgJobPhone" jdbcType="VARCHAR"/>
		<result column="belong_area" property="belongArea" jdbcType="VARCHAR"/>
		<result column="root_org" property="rootOrg" jdbcType="VARCHAR"/>
		<result column="create_by" property="createBy" jdbcType="VARCHAR"/>
		<result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
		<result column="field1" property="field1" jdbcType="VARCHAR"/>
		<result column="field2" property="field2" jdbcType="VARCHAR"/>
		<result column="field3" property="field3" jdbcType="VARCHAR"/>
		<result column="field4" property="field4" jdbcType="VARCHAR"/>
		<result column="field5" property="field5" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap id="orgLeaderDetailMap" type="com.oa.platform.entity.OrgLeaderDetail">
		<result column="id_" property="staticsId" jdbcType="VARCHAR"/>
		<result column="org_id" property="orgId" jdbcType="VARCHAR"/>
		<result column="user_name" property="userName" jdbcType="VARCHAR"/>
		<result column="positon" property="positon" jdbcType="VARCHAR"/>
		<result column="allow_leader_time" property="allowLeaderTime" jdbcType="VARCHAR"/>
		<result column="create_by" property="createBy" jdbcType="VARCHAR"/>
		<result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
		<result column="level" property="positionLevel" jdbcType="VARCHAR"/>
		<result column="positon_desc" property="positionDesc" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap  id="orgRewardDetailMap" type="com.oa.platform.entity.OrgRewardDetail">
		<result column="id_" property="staticsId" jdbcType="VARCHAR"/>
		<result column="org_id" property="orgId" jdbcType="VARCHAR"/>
		<result column="reward_name" property="rewardName" jdbcType="VARCHAR"/>
		<result column="allow_org" property="allowOrg" jdbcType="VARCHAR"/>
		<result column="allow_time" property="allowTime" jdbcType="VARCHAR"/>
		<result column="create_by" property="createBy" jdbcType="VARCHAR"/>
		<result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
		<result column="allow_org_level" property="allowOrgLevel" jdbcType="VARCHAR"/>
		<result column="reward_desc" property="rewardDesc" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap  id="orgDeptDetailMap" type="com.oa.platform.entity.OrgDeptDetail">
		<result column="id_" property="staticsId" jdbcType="VARCHAR"/>
		<result column="org_id" property="orgId" jdbcType="VARCHAR"/>
		<result column="dept_name" property="deptName" jdbcType="VARCHAR"/>
		<result column="dept_natureType" property="deptNatureType" jdbcType="VARCHAR"/>
		<result column="dept_type" property="deptType" jdbcType="VARCHAR"/>
		<result column="create_by" property="createBy" jdbcType="VARCHAR"/>
		<result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap type="com.oa.platform.entity.OrgUser" id="orgUserMap">
		<result column="org_id" property="orgId" jdbcType="VARCHAR"/>
		<result column="org_nm" property="orgName" jdbcType="VARCHAR"/>
		<result column="upper_org" property="upperOrg" jdbcType="VARCHAR"/>
		<result column="user_id" property="userId" jdbcType="VARCHAR"/>
		<result column="user_name" property="userName" jdbcType="VARCHAR"/>
		<result column="gender" property="gender" jdbcType="VARCHAR"/>
		<result column="phone" property="phone" jdbcType="VARCHAR"/>
		<result column="birth_Time" property="birthTime" jdbcType="VARCHAR"/>
		<result column="nation" property="nation" jdbcType="VARCHAR"/>
		<result column="education" property="education" jdbcType="VARCHAR"/>
		<result column="is_leader" property="isLeader" jdbcType="VARCHAR"/>
		<result column="act_org" property="actOrg" jdbcType="VARCHAR"/>
		<result column="star_flag" property="starFlag" jdbcType="VARCHAR"/>
		<result column="join_party_time" property="joinPartyTime" jdbcType="VARCHAR"/>
		<result column="turn_right_time" property="turnRightTime" jdbcType="VARCHAR"/>
		<result column="hometown" property="hometown" jdbcType="VARCHAR"/>
		<result column="bachelor" property="bachelor" jdbcType="VARCHAR"/>
		<result column="office_number" property="officeNumber" jdbcType="VARCHAR"/>
		<result column="live_address" property="liveAddress" jdbcType="VARCHAR"/>
		<result column="mail" property="mail" jdbcType="VARCHAR"/>
		<result column="id_card" property="idCard" jdbcType="VARCHAR"/>
	</resultMap>
	<insert id="orgAdd" parameterType="com.oa.platform.entity.Organization">
		insert into t_sys_org (
			org_id, 
			org_nm,
			org_type,
			concat_persion,
			phone, 
			found_time, 
			upper_org, 
			is_leaf,
			status,
			is_dept,
			create_on,
			create_by,
			update_on,
			update_by,
			root_org)
		values (#{orgId},#{orgName},#{orgType},#{concatPersion},#{phone},#{foundTime},#{upperOrg},#{isLeaf},'1','0',now(),#{createBy},now(),#{updateBy},#{rootOrg})
	</insert>
	<insert id="orgAddDetail" parameterType="com.oa.platform.entity.Organization">
		insert into t_org_detail (
			org_id,
			org_code,
			org_address_relation,
			elct_Type,
			lead_time,
			current_leader_time,
			current_lead_out_time,
			elct_shoud_people_count,
			elct_act_people_count,
			upper_sure_org_count,
			act_upper_org_per_count,
			change_org_relation_auth,
			is_del_part_person_auth,
			org_job_phone,
			belong_area,
			trans_code, 
			fix_phone, 
			address, 
			field1, 
			field2, 
			field3, 
			field4, 
			field5, 
			status, 
			create_on, 
			create_by, 
			update_on, 
			update_by
		) values (
			#{orgId},
			#{orgCode},
			#{orgAddressRelation},
			#{elctType},
			#{leadTime},
			#{currentLeaderTime},
			#{currentLeadOutTime},
			#{elctShoudPeopleCount,jdbcType=INTEGER},
			#{elctActPeopleCount,jdbcType=INTEGER},
			#{upperSureOrgCount,jdbcType=INTEGER},
			#{actUpperOrgPerCount,jdbcType=INTEGER},
			#{changeOrgRelationAuth},
			#{isDelPartPersonAuth},
			#{orgJobPhone},
			#{belongArea},
			#{transCode},
			#{fixPhone},
			#{address},
			#{field1},
			#{field2},
			#{field3},
			#{field4},
			#{field5},
			'1',
			now(),
			#{createBy},
			now(),
			#{updateBy}
		)
	</insert>
	<select id="getUpperOrgList" resultMap="orgMap">
		select
			org_id,
			org_nm,
			upper_org,
			org_type
		from t_sys_org
		where status='1' and is_dept='0'
	</select>
	<select id="getUserUpperOrgList" resultMap="orgMap">
		WITH recursive org_cte AS (
			SELECT
				sorg.org_id,
				sorg.org_nm,
				sorg.upper_org,
				sorg.org_type 
			FROM
				t_sys_org sorg 
			WHERE
				instr(#{orgId},sorg.org_id)>0
				AND sorg.STATUS = '1' UNION ALL
			SELECT
				org.org_id,
				org.org_nm,
				org.upper_org,
				org.org_type 
			FROM
				t_sys_org org
				INNER JOIN org_cte sysorg ON org.upper_org = sysorg.org_id 
				AND org.STATUS = '1' 
			) SELECT
			ote.org_id,
			ote.org_nm,
			ote.org_type,
		CASE
			WHEN instr(#{orgId},ote.org_id)>0 THEN
			NULL ELSE upper_org 
			END upper_org 
		FROM
		org_cte ote
	</select>
	<select id="getOrgIdByUserId" resultType="java.lang.String">
		select org_id from t_org_user where user_id=#{userId} and status='1'
	</select>
	<select id="getOrgDetailById" resultMap="orgMap">
		select 
			org.org_id,
			org.org_nm,
			org.org_type,
			org.concat_persion,
			org.phone,
			org.upper_org,
			org.found_time,
			orgdetail.org_code,
			orgdetail.org_address_relation,
			orgdetail.elct_Type,
			orgdetail.lead_time,
			orgdetail.current_leader_time,
			orgdetail.current_lead_out_time,
			orgdetail.elct_shoud_people_count,
			orgdetail.elct_act_people_count,
			orgdetail.upper_sure_org_count,
			orgdetail.act_upper_org_per_count,
			orgdetail.change_org_relation_auth,
			orgdetail.is_del_part_person_auth,
			orgdetail.org_job_phone,
			orgdetail.fix_phone,
			orgdetail.belong_area,
			orgdetail.trans_code,
			orgdetail.address,
			orgdetail.field1,
			orgdetail.field2,
			orgdetail.field3,
			orgdetail.field4,
			orgdetail.field5
		from 
			t_sys_org org 
		left join 
			t_org_detail orgdetail
		on org.org_id=orgdetail.org_id and org.status='1'
		where org.org_id=#{orgId}
	</select>
	<select id="getOrgList" resultMap="orgMap">
		select tmp.* from 
		(( WITH recursive org_cte AS (
				SELECT
					sorg.org_id,
					sorg.org_nm,
					sorg.org_type,
					sorg.concat_persion,
					sorg.phone,
					sorg.found_time,
					sorg.is_dept,
					sorg.upper_org,
					sorg.root_org,
					orgleader.leader,
					sorg.create_on
				FROM
					t_sys_org sorg
					LEFT JOIN ( SELECT GROUP_CONCAT( user_name ) leader, org_id FROM t_org_leader_detail WHERE STATUS = '1' GROUP BY org_id ) orgleader ON sorg.org_id = orgleader.org_id 
				WHERE
					sorg.STATUS = '1'
					<if test="isSuperAdmin != true">
						and instr(#{orgId},sorg.org_id)>0
					</if>
					 UNION ALL
				SELECT
					org.org_id,
					org.org_nm,
					org.org_type,
					org.concat_persion,
					org.phone,
					org.found_time,
					org.is_dept,
					org.upper_org,
					org.root_org,
					orgleader.leader,
					org.create_on 
				FROM
					t_sys_org org
					LEFT JOIN ( SELECT GROUP_CONCAT( user_name ) leader, org_id FROM t_org_leader_detail WHERE STATUS = '1' GROUP BY org_id ) orgleader ON org.org_id = orgleader.org_id
					INNER JOIN org_cte sysorg ON org.org_id = sysorg.upper_org 
					AND org.STATUS = '1' 
					) SELECT
					distinct ote.* 
				FROM
					org_cte ote
					
					) UNION
					(
					WITH recursive org_cte AS (
				SELECT
					sorg.org_id,
					sorg.org_nm,
					sorg.org_type,
					sorg.concat_persion,
					sorg.phone,
					sorg.found_time,
					sorg.is_dept,
					sorg.upper_org,
					sorg.root_org,
					orgleader.leader,
					sorg.create_on 
				FROM
					t_sys_org sorg
					LEFT JOIN ( SELECT GROUP_CONCAT( user_name ) leader, org_id FROM t_org_leader_detail WHERE STATUS = '1' GROUP BY org_id ) orgleader ON sorg.org_id = orgleader.org_id 
				WHERE
					sorg.STATUS = '1'
					<if test="isSuperAdmin !=true">
						and instr(#{orgId},sorg.org_id)>0
					</if>
					UNION ALL
				SELECT
					org.org_id,
					org.org_nm,
					org.org_type,
					org.concat_persion,
					org.phone,
					org.found_time,
					org.is_dept,
					org.upper_org,
					org.root_org,
					orgleader.leader,
					org.create_on 
				FROM
					t_sys_org org
					LEFT JOIN ( SELECT GROUP_CONCAT( user_name ) leader, org_id FROM t_org_leader_detail WHERE STATUS = '1' GROUP BY org_id ) orgleader ON org.org_id = orgleader.org_id
					INNER JOIN org_cte sysorg ON sysorg.org_id = org.upper_org 
					AND org.STATUS = '1' 
					) SELECT
					distinct ote.* 
				FROM
					org_cte ote
					 
					)) tmp order by tmp.create_on
	</select>
	<select id="getOrgIdByuserId" resultMap="orgMap">
		SELECT
			org_id 
		FROM
			t_org_user 
		WHERE
			user_id = #{userId} and status='1'
	</select>
	<select id="getLeaderByOrgId" resultType="java.lang.String">
		select dtl.user_id from t_user_dtl dtl left join t_org_user orguser on dtl.user_id=orguser.user_id where orguser.org_id=#{orgId} and dtl.is_party='1'
			and dtl.is_leader='1' and orguser.status='1'
	</select>
	<select id="getOrgUserListByOrgIds" parameterType="java.util.List" resultMap="orgUserMap">
		select
			usrdtl.user_id org_id,
			orguser.org_id upper_org,
			usr.user_id,
			usr.user_name,
			usrdtl.gender,
			usrdtl.phone,
			usrdtl.birth_time,
			usrdtl.nation,
			usrdtl.education,
			usrdtl.is_leader,
			orguser.org_id act_org
		from 
			t_user usr
		left join t_user_dtl usrdtl on usr.user_id = usrdtl.user_id and usr.record_flag='1'
		left join t_org_user orguser on usr.user_id=orguser.user_id and orguser.status='1'
		where usrdtl.is_leader='0' and usrdtl.is_party='1'
		<if test="userName != null and userName != ''">
		and instr(usr.user_name,#{userName})>0
		</if>
		<if test="year != null and year != ''">
		and left(usrdtl.join_party_time,4) = #{year}
		</if>
		
	</select>
	<select id="getOrgUserList" resultMap="orgUserMap">
		
		( WITH recursive org_cte AS (
		SELECT
			sorg.org_id,
			sorg.org_nm,
			sorg.upper_org,
			usr.user_id,
			usr.user_name,
			userdtl.gender,
			userdtl.phone,
			userdtl.birth_time,
			userdtl.nation,
			userdtl.education,
			userdtl.is_leader,
			sorg.org_id act_org,
			'1' star_flag
		FROM
			t_sys_org sorg
			LEFT JOIN t_org_user orguser ON sorg.org_id = orguser.org_id 
			AND orguser.STATUS = '1' 
			AND sorg.STATUS = '1'
			LEFT JOIN t_user usr ON orguser.user_id = usr.user_id 
			AND usr.record_flag = '1'
			LEFT JOIN t_user_dtl userdtl ON orguser.user_id = userdtl.user_id 
		WHERE
			userdtl.is_leader = '1'
			<if test="isSuperAdmin !=true">
				and instr(#{orgId},sorg.org_id)>0
			</if>
		    and userdtl.is_party='1' UNION ALL
		SELECT
			org.org_id,
			org.org_nm,
			org.upper_org,
			usr.user_id,
			usr.user_name,
			userdtl.gender,
			userdtl.phone,
			userdtl.birth_time,
			userdtl.nation,
			userdtl.education,
			userdtl.is_leader,
			org.org_id act_org,
			'1' star_flag 
		FROM
			t_sys_org org
			LEFT JOIN t_org_user orguser ON org.org_id = orguser.org_id 
			AND orguser.STATUS = '1' 
			AND org.STATUS = '1'
			LEFT JOIN t_user usr ON orguser.user_id = usr.user_id 
			AND usr.record_flag = '1'
			LEFT JOIN t_user_dtl userdtl ON orguser.user_id = userdtl.user_id
			INNER JOIN org_cte sysorg ON org.org_id = sysorg.upper_org 
			AND org.STATUS = '1' 
		WHERE
			userdtl.is_leader = '1' and userdtl.is_party='1'
			) SELECT
			distinct ote.* 
		FROM
			org_cte ote 
			) UNION
			(
			WITH recursive org_cte AS (
		SELECT
			sorg.org_id,
			sorg.org_nm,
			sorg.upper_org,
			usr.user_id,
			usr.user_name,
			userdtl.gender,
			userdtl.phone,
			userdtl.birth_time,
			userdtl.nation,
			userdtl.education,
			userdtl.is_leader,
			sorg.org_id act_org,
			'1' star_flag 
		FROM
			t_sys_org sorg
			LEFT JOIN t_org_user orguser ON sorg.org_id = orguser.org_id 
			AND orguser.STATUS = '1' 
			AND sorg.STATUS = '1'
			LEFT JOIN t_user usr ON orguser.user_id = usr.user_id 
			AND usr.record_flag = '1'
			LEFT JOIN t_user_dtl userdtl ON orguser.user_id = userdtl.user_id 
		WHERE
			userdtl.is_leader = '1'
			<if test="isSuperAdmin !=true">
				and instr(#{orgId},sorg.org_id)>0
			</if>
			and userdtl.is_party='1' UNION ALL
		SELECT
			org.org_id,
			org.org_nm,
			org.upper_org,
			usr.user_id,
			usr.user_name,
			userdtl.gender,
			userdtl.phone,
			userdtl.birth_time,
			userdtl.nation,
			userdtl.education,
			userdtl.is_leader,
			org.org_id act_org,
			'1' star_flag 
		FROM
			t_sys_org org
			LEFT JOIN t_org_user orguser ON org.org_id = orguser.org_id 
			AND orguser.STATUS = '1' 
			AND org.STATUS = '1'
			LEFT JOIN t_user usr ON orguser.user_id = usr.user_id 
			AND usr.record_flag = '1'
			LEFT JOIN t_user_dtl userdtl ON orguser.user_id = userdtl.user_id
			INNER JOIN org_cte sysorg ON sysorg.org_id = org.upper_org 
			AND org.STATUS = '1' 
		WHERE
			userdtl.is_leader = '1' and userdtl.is_party='1'
			) SELECT
			distinct ote.* 
		FROM
			org_cte ote 
			) 
			
	</select>
	<select id="getDeptList" resultMap="orgMap">
	</select>
	<!-- 删除指定组织及下属组织 -->
	<update id="delOrg">
		UPDATE t_sys_org 
		SET STATUS = '0' 
		WHERE
			org_id IN (
			WITH recursive org_cte AS (
		SELECT
			org_id 
		FROM
			t_sys_org 
		WHERE
			org_id = #{orgId}
			AND STATUS = '1' UNION ALL
		SELECT
			org.org_id 
		FROM
			t_sys_org org
			INNER JOIN org_cte sysorg ON sysorg.org_id = org.upper_org 
			AND org.STATUS = '1' 
			) SELECT
			* 
		FROM
			org_cte 
			)
	</update>
	<insert id="saveOrgUser">
		insert into t_org_user (user_id,org_id,status)
		values(#{userId},#{orgId},'1')
	</insert>
	<!-- 删除指定组织及下属组织的人员关联 -->
	<update id="delOrgUser">
		UPDATE t_org_user 
		SET STATUS = '0' 
		WHERE
			org_id IN (
			WITH recursive org_cte AS (
		SELECT
			org_id 
		FROM
			t_sys_org 
		WHERE
			org_id = #{orgId}
			AND STATUS = '1' UNION ALL
		SELECT
			org.org_id 
		FROM
			t_sys_org org
			INNER JOIN org_cte sysorg ON sysorg.org_id = org.upper_org 
			AND org.STATUS = '1' 
			) SELECT
			* 
		FROM
			org_cte 
			)
	</update>
	<!-- 指定组织及下属组织书记删除 -->
	<update id="delLeader">
		UPDATE t_user_role 
		SET STATUS = '0' 
		WHERE
			user_id IN (
			WITH recursive org_cte AS (
		SELECT
			org_id,
			org_nm,
			phone,
			found_time,
			is_dept,
			upper_org 
		FROM
			t_sys_org 
		WHERE
			org_id = #{orgId} 
			AND STATUS = '1' UNION ALL
		SELECT
			org.org_id,
			org.org_nm,
			org.phone,
			org.found_time,
			org.is_dept,
			org.upper_org 
		FROM
			t_sys_org org
			INNER JOIN org_cte sysorg ON sysorg.org_id = org.upper_org 
			AND org.STATUS = '1' 
			) SELECT
			tuser.user_id 
		FROM
			org_cte ote
			LEFT JOIN (
		SELECT
			urole.user_id,
			osuser.org_id 
		FROM
			t_user_role urole
			LEFT JOIN t_org_user osuser ON urole.user_id = osuser.user_id 
		WHERE
			urole.role_id = 'f99e26b6-8f95-4049-b719-36609fe76fea1' 
			AND osuser.STATUS = '1' 
			AND urole.STATUS = '1' 
			) ouser ON ote.org_id = ouser.org_id
			LEFT JOIN t_user tuser ON ouser.user_id = tuser.user_id 
			)
	</update>
	<update id="orgEdit" parameterType="com.oa.platform.entity.Organization">
		UPDATE t_sys_org
	    <trim prefix="SET" suffixOverrides="," suffix=" WHERE org_id = #{orgId} and status='1'">
	      <if test="orgName != null and orgName != ''">
	        org_nm = #{orgName},
	      </if>
	      <if test="orgType != null and orgType != ''">
	        org_type = #{orgType},
	      </if>
	      <if test="phone != null and phone != ''">
	        phone = #{phone},
	      </if>
	      <if test="concatPersion != null and concatPersion != ''">
	        concat_persion = #{concatPersion},
	      </if>
	      <if test="upperOrg != null and upperOrg != ''">
	        upper_org = #{upperOrg},
	      </if>
	      <if test="foundTime != null and foundTime != ''">
	        found_time = #{foundTime},
	      </if>
	      <if test="updateBy != null and updateBy != ''">
	        update_by = #{updateBy},
	        update_on = now(),
	      </if>
	    </trim>
	</update>
	<update id="orgEditDetail" parameterType="com.oa.platform.entity.Organization">
		UPDATE t_org_detail
	    <trim prefix="SET" suffixOverrides="," suffix=" WHERE org_id = #{orgId} and status='1'">
	      <if test="orgCode != null and orgCode != ''">
	        org_code = #{orgCode},
	      </if>
	      <if test="orgAddressRelation != null and orgAddressRelation != ''">
	        org_address_relation = #{orgAddressRelation},
	      </if>
	      <if test="elctType != null and elctType != ''">
	        elct_Type = #{elctType},
	      </if>
	      <if test="leadTime != null and leadTime != ''">
	        lead_time = #{leadTime},
	      </if>
	      <if test="currentLeaderTime != null and currentLeaderTime != ''">
	        current_leader_time = #{currentLeaderTime},
	      </if>
	      <if test="currentLeadOutTime != null and currentLeadOutTime != ''">
	        current_lead_out_time = #{currentLeadOutTime},
	      </if>
	      <if test="elctShoudPeopleCount != null">
	        elct_shoud_people_count = #{elctShoudPeopleCount},
	      </if>
	      <if test="elctActPeopleCount != null">
	        elct_act_people_count = #{elctActPeopleCount},
	      </if>
	      <if test="upperSureOrgCount != null">
	        upper_sure_org_count = #{upperSureOrgCount},
	      </if>
	      <if test="actUpperOrgPerCount != null">
	        act_upper_org_per_count = #{actUpperOrgPerCount},
	      </if>
	      <if test="changeOrgRelationAuth != null and changeOrgRelationAuth != ''">
	        change_org_relation_auth = #{changeOrgRelationAuth},
	      </if>
	      <if test="isDelPartPersonAuth != null and isDelPartPersonAuth != ''">
	        is_del_part_person_auth = #{isDelPartPersonAuth},
	      </if>
	      <if test="orgJobPhone != null and orgJobPhone != ''">
	        org_job_phone = #{orgJobPhone},
	      </if>
	      <if test="belongArea != null and belongArea != ''">
	        belong_area = #{belongArea},
	      </if>
	      <if test="transCode != null and transCode != ''">
	        trans_code = #{transCode},
	      </if>
	      <if test="fixPhone != null and fixPhone != ''">
	        fix_phone = #{fixPhone},
	      </if>
	      <if test="address != null and address != ''">
	        address = #{address},
	      </if>
	      <if test="updateBy != null and updateBy != ''">
	        update_by = #{updateBy},
	        update_on = now(),
	      </if>
	    </trim>
	</update>
	
	<!-- 										领导班子									 -->
	
	<select id="getOrgLeaderList" resultMap="orgLeaderDetailMap">
		select
			id_,
			org_id,
			user_name,
			positon,
			allow_leader_time,
			create_by,
			update_by,
			level,
			positon_desc
		from 
			t_org_leader_detail
		where status='1' and org_id=#{orgId}
	</select>
	<insert id="saveOrgLeaderDetail" parameterType="com.oa.platform.entity.OrgLeaderDetail">
		insert into t_org_leader_detail (
			id_, 
			org_id,
			user_name,
			positon,
			allow_leader_time,
			status,
			create_on,
			create_by,
			level,
			positon_desc
			)
		values (
			#{staticsId},
			#{orgId},
			#{userName},
			#{positon},
			#{allowLeaderTime},
			'1',
			now(),
			#{createBy},
			#{positionLevel},
			#{positionDesc}
		)
	</insert>
	<!-- 删除 -->
	<update id="delOrgLeaderById">
		update t_org_leader_detail set status='0' 
		where org_id=#{orgId} and status='1'
	</update>
	<!--                                    奖惩情况                                                         -->
	<select id="getOrgRewardList" resultMap="orgRewardDetailMap">
		select
			id_,
			org_id,
			reward_name,
			allow_org,
			allow_time,
			create_by,
			update_by,
			allow_org_level,
			reward_desc
		from 
			t_org_reward_detail
		where status='1' and org_id=#{orgId}
	</select>
	<insert id="saveOrgRewardDetail" parameterType="com.oa.platform.entity.OrgRewardDetail">
		insert into t_org_reward_detail (
			id_,
			org_id,
			reward_name,
			allow_org,
			allow_time,
			status,
			create_on,
			create_by,
			allow_org_level,
			reward_desc
			)
		values (
			#{staticsId},
			#{orgId},
			#{rewardName},
			#{allowOrg},
			#{allowTime},
			'1',
			now(),
			#{createBy},
			#{allowOrgLevel},
			#{rewardDesc}
		)
	</insert>
	<!-- 删除 -->
	<update id="delOrgRewardById">
		update t_org_reward_detail set status='0' 
		where org_id=#{orgId} and status='1'
	</update>
	
	<!--                                    单位信息                                                         -->
	<select id="getOrgDeptList" resultMap="orgDeptDetailMap">
		select
			id_,
			org_id,
			dept_name,
			dept_natureType,
			dept_type,
			create_by,
			update_by
		from 
			t_org_dept_detail
		where status='1' and org_id=#{orgId}
	</select>
	<insert id="saveOrgDeptDetail" parameterType="com.oa.platform.entity.OrgDeptDetail">
		insert into t_org_dept_detail (
			id_,
			org_id,
			dept_name,
			dept_natureType,
			dept_type,
			status,
			create_on,
			create_by
			)
		values (
			#{staticsId},
			#{orgId},
			#{deptName},
			#{deptNatureType},
			#{deptType},
			'1',
			now(),
			#{createBy}
		)
	</insert>
	<!-- 删除 -->
	<update id="delOrgDeptById">
		update t_org_dept_detail set status='0' 
		where org_id=#{orgId} and status='1'
	</update>
	<update id="delUser">
		update t_user set record_flag =0 where user_id=#{userId} and record_flag =1
	</update>
	<delete id="delOrgUserDtl">
		delete from t_user_dtl where user_id=#{userId}
	</delete>
	<update id="delUserOrg">
		update t_org_user set status='0' where user_id=#{userId} and status='1'
	</update>
	<!-- <delete id="delUserOrg">
		delete from 
	</delete> -->
	<update id="downOrgUserById">
		UPDATE t_user_dtl dtl
			LEFT JOIN t_org_user orguser ON dtl.user_id = orguser.user_id 
			AND orguser.STATUS = '1' 
			SET dtl.is_leader = '0' 
			WHERE
				orguser.org_id = #{orgId}
	</update>
	<update id="updateOrgUser">
		update t_org_user set org_id=#{orgId} where user_id=#{userId} and status='1'
	</update>
	
	<!-- 数据可视化 -->
	<!-- 年龄柱状图数据 -->
	<select id="getAgeEchartBarData" resultType="java.util.Map">
		SELECT
			agetemp.root_org orgId,
			agetemp.age_temp ageTemp,
			count( 1 ) partyNum 
		FROM
			(
		SELECT
			sysorg.root_org,
		CASE
			
			WHEN TIMESTAMPDIFF( YEAR, dtl.birth_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) BETWEEN 20 
			AND 30 THEN
			'20-30' 
			WHEN TIMESTAMPDIFF( YEAR, dtl.birth_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) BETWEEN 30 
			AND 40 THEN
			'30-40' 
			WHEN TIMESTAMPDIFF( YEAR, dtl.birth_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) BETWEEN 40 
			AND 50 THEN
			'40-50' 
			WHEN TIMESTAMPDIFF( YEAR, dtl.birth_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) BETWEEN 50 
			AND 60 THEN
			'50-60' 
			WHEN TIMESTAMPDIFF( YEAR, dtl.birth_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) > 60 THEN
			'60以上' 
			END age_temp 
		FROM
			t_user usr
			LEFT JOIN t_user_dtl dtl ON usr.user_id = dtl.user_id
			LEFT JOIN t_org_user orguser ON usr.user_id = orguser.user_id 
			LEFT JOIN t_sys_org sysorg ON sysorg.org_id= orguser.org_id
		WHERE
			usr.record_flag = '1' 
			AND sysorg.status = '1'
			AND dtl.is_party = '1' 
			AND orguser.STATUS = '1'
			AND sysorg.root_org in
			<foreach collection="orgIds" index="index" item="itemId" open="(" separator="," close=")">
		      #{itemId}
		    </foreach> 
			) agetemp 
		WHERE
			agetemp.age_temp IS NOT NULL 
		GROUP BY
			agetemp.age_temp,
			agetemp.root_org 
	</select>
	<!-- 党龄柱状图数据 -->
	<select id="getPartyAgeEchartBarData" resultType="java.util.Map">
		SELECT
			agetemp.root_org orgId,
			agetemp.age_temp ageTemp,
			count( 1 )  partyNum
		FROM
			(
		SELECT
			sysorg.root_org,
		CASE
			
			WHEN TIMESTAMPDIFF( YEAR, dtl.join_party_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) BETWEEN 0 
			AND 5 THEN
			'0-5' 
			WHEN TIMESTAMPDIFF( YEAR, dtl.join_party_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) BETWEEN 5 
			AND 10 THEN
			'5-10' 
			WHEN TIMESTAMPDIFF( YEAR, dtl.join_party_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) BETWEEN 10 
			AND 15 THEN
			'10-15' 
			WHEN TIMESTAMPDIFF( YEAR, dtl.join_party_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) BETWEEN 15 
			AND 20 THEN
			'15-20' 
			WHEN TIMESTAMPDIFF( YEAR, dtl.join_party_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) > 20 THEN
			'20以上' 
			END age_temp 
		FROM
			t_user usr
			LEFT JOIN t_user_dtl dtl ON usr.user_id = dtl.user_id
			LEFT JOIN t_org_user orguser ON usr.user_id = orguser.user_id 
			LEFT JOIN t_sys_org sysorg ON sysorg.org_id= orguser.org_id
		WHERE
			usr.record_flag = '1' 
			AND dtl.is_party = '1' 
			AND orguser.STATUS = '1'
			AND sysorg.STATUS = '1'
			AND sysorg.root_org in
			<foreach collection="orgIds" index="index" item="itemId" open="(" separator="," close=")">
		      #{itemId}
		    </foreach>  
			) agetemp 
		WHERE
			agetemp.age_temp IS NOT NULL 
		GROUP BY
			agetemp.age_temp,
			agetemp.root_org 
	</select>
	<!-- 学历柱状图数据 -->
	<select id="getEducationEchartBarData" resultType="java.util.Map">
		SELECT
			sysorg.root_org orgId,
			dtl.education,
			dict.dict_name  educationName,
			count( 1 )  partyNum
		FROM
			t_user usr
			LEFT JOIN t_user_dtl dtl ON usr.user_id = dtl.user_id
			LEFT JOIN t_org_user orguser ON usr.user_id = orguser.user_id
			LEFT JOIN t_dict dict ON dtl.education = dict.dict_id
			LEFT JOIN t_sys_org sysorg ON sysorg.org_id= orguser.org_id 
		WHERE
			usr.record_flag = '1' 
			AND dtl.is_party = '1' 
			AND orguser.STATUS = '1' 
			AND sysorg.STATUS = '1'
			AND sysorg.root_org in
			<foreach collection="orgIds" index="index" item="itemId" open="(" separator="," close=")">
		      #{itemId}
		    </foreach> 
		GROUP BY
			sysorg.root_org,
			dtl.education
	</select>
	<!-- 组织性别饼状图 -->
	<select id="getGenderEchartData" resultType="java.util.Map">
		SELECT
			sysorg.root_org orgId,
		CASE
			
			WHEN dtl.gender = '1' THEN
			'男' 
			WHEN dtl.gender = '0' THEN
			'女' 
			END gender,
			count( 1 ) partyNum 
		FROM
			t_user usr
			LEFT JOIN t_user_dtl dtl ON usr.user_id = dtl.user_id
			LEFT JOIN t_org_user orguser ON usr.user_id = orguser.user_id 
			LEFT JOIN t_sys_org sysorg ON sysorg.org_id= orguser.org_id 
		WHERE
			usr.record_flag = '1' 
			AND dtl.is_party = '1' 
			AND orguser.STATUS = '1'
			AND sysorg.STATUS = '1' 
			AND sysorg.root_org in
			<foreach collection="orgIds" index="index" item="itemId" open="(" separator="," close=")">
		      #{itemId}
		    </foreach> 
		GROUP BY
			sysorg.root_org,
			gender
	</select>
	<select id="getRootOrgId" resultMap="orgMap">
	
		select org_id,org_nm,upper_org from t_sys_org where status='1' and org_id in 
		(select distinct root_org from t_sys_org where instr(#{orgId},org_id)>0)
	</select>
	<select id="getBottomOrgByOrgId" resultType="java.lang.String">
		WITH recursive org_cte AS (
			SELECT
				org_id 
			FROM
				t_sys_org 
			WHERE
				org_id = #{orgId}
				AND STATUS = '1' UNION ALL
			SELECT
				org.org_id 
			FROM
				t_sys_org org
				INNER JOIN org_cte sysorg ON sysorg.org_id = org.upper_org 
				AND org.STATUS = '1' 
				) SELECT
				* 
			FROM
				org_cte 
	</select>
	<select id="getOrgUserListByOrg" parameterType="java.util.List" resultMap="orgUserMap">
		select
			usrdtl.user_id org_id,
			orguser.org_id upper_org,
			usr.user_id,
			usr.user_name,
			usrdtl.gender,
			usrdtl.phone,
			usrdtl.birth_time,
			usrdtl.nation,
			usrdtl.education,
			usrdtl.is_leader,
			orguser.org_id act_org,
			sysorg.org_nm,
			CASE
				WHEN TIMESTAMPDIFF( YEAR, usrdtl.join_party_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) &lt; 0 
				THEN 0 else TIMESTAMPDIFF( YEAR, usrdtl.join_party_time, DATE_FORMAT( NOW( ), '%Y-%m-%d %H:%i:%S' ) ) end join_party_time
		from 
			t_user usr
		left join t_user_dtl usrdtl on usr.user_id = usrdtl.user_id and usr.record_flag='1'
		left join t_org_user orguser on usr.user_id=orguser.user_id and orguser.status='1'
		left join t_sys_org sysorg on orguser.org_id=sysorg.org_id
		where usrdtl.is_party='1'
		<if test="userName != null and userName != ''">
		and instr(usr.user_name,#{userName})>0
		</if>
		<if test="year != null and year != ''">
		and left(usrdtl.join_party_time,4) = #{year}
		</if>
		AND orguser.org_id in
		<foreach collection="orgList" index="index" item="itemId" open="(" separator="," close=")">
	      #{itemId}
	    </foreach> 
	</select>

	<select id="findOrgIdByUserId" resultType="java.lang.String">
		SELECT
			org_id
		FROM
			t_org_user
		WHERE
			user_id = #{userId} and status='1'
	</select>
	<insert id="insertExcelUsers" parameterType="java.util.List">
		insert into t_user (user_id,user_type,user_name,user_pwd,user_pwd_origi,record_flag,record_time) 
		values
		<foreach collection="list" item="item" index="index" separator=",">
	      (#{item.userId}, 3,#{item.userName}, '$2a$10$ELoQRmGUvr0/81JdAHyHfewt6h.zqjlaIjM1NUNN.Fwcy5mkP4qp2', '123456', 1,now()
	       
	      )
	    </foreach>
	</insert>
	<insert id="insertExcelUsersDtl" parameterType="java.util.List">
		insert into t_user_dtl (user_id,gender,phone,nation,join_party_time,id_card,is_party,is_leader,create_on,birth_time) 
		values
		<foreach collection="list" item="item" index="index" separator=",">
	      (#{item.userId}, #{item.gender},#{item.phone}, #{item.nation}, #{item.joinPartyTime}, #{item.idCard},'1','0',now(),#{item.birthTime}
	       
	      )
	    </foreach>
	</insert>
	<insert id="insertExcelUsersOrg" parameterType="java.util.List">
		insert into t_org_user (org_id,user_id,status)
		values
		<foreach collection="list" item="item" index="index" separator=",">
	      (#{item.orgId}, #{item.userId},'1'
	      )
	    </foreach>
	</insert>
	<select id="getOrgIdByName" resultType="java.lang.String">
		select org_id from t_sys_org where org_nm=#{orgName}
	</select>
	<select id="getPartyExcelList" resultMap="orgUserMap">
		SELECT
			usr.user_name,
			org.org_nm,
			dict.dict_name bachelor,
			dict2.dict_name education,
			case when usrdtl.gender = '1' then '男'  when usrdtl.gender = '0' then '女'  end gender,
			usrdtl.phone,
			usrdtl.birth_time,
			usrdtl.nation,
			usrdtl.join_party_time,
			usrdtl.turn_right_time,
			usrdtl.hometown,
			usrdtl.office_number,
			usrdtl.live_address,
			usrdtl.mail,
			usrdtl.id_card 
		FROM
			t_user usr
			LEFT JOIN t_user_dtl usrdtl ON usr.user_id = usrdtl.user_id
			LEFT JOIN t_org_user orguser ON usr.user_id = orguser.user_id
			LEFT JOIN t_sys_org org ON orguser.org_id = org.org_id
			LEFT JOIN t_dict dict ON usrdtl.bachelor = dict.dict_id
			LEFT JOIN t_dict dict2 ON usrdtl.education = dict2.dict_id 
		WHERE
			usr.record_flag = 1 
			AND usrdtl.is_party = '1' 
			AND org.STATUS = '1' 
			AND orguser.STATUS = '1'
			AND orguser.org_id in
			<foreach collection="orgIds" index="index" item="itemId" open="(" separator="," close=")">
		      #{itemId}
		    </foreach> 
	</select>
	<select id="getdwjbxxExcelOrg" resultMap="orgMap">
		SELECT
			uprorg.org_nm upper_org_name,
			t.* 
		FROM
			(
			(
			WITH recursive org_cte AS (
		SELECT
			sorg.org_id,
			sorg.org_nm,
			dict3.dict_name org_type,
			sorg.concat_persion,
			sorg.phone,
			sorg.found_time,
			sorg.is_dept,
			sorg.upper_org,
			sorg.root_org,
			treedict.node_nm org_address_relation,
			dict1.dict_name elct_Type,
			dict2.dict_name lead_time,
			dtl.current_leader_time,
			dtl.current_lead_out_time,
			dtl.elct_shoud_people_count,
			dtl.elct_act_people_count,
			dtl.upper_sure_org_count,
			dtl.act_upper_org_per_count,
			dtl.change_org_relation_auth,
			dtl.is_del_part_person_auth,
			dtl.org_job_phone,
			dtl.fix_phone,
			dtl.belong_area,
			dtl.trans_code,
			dtl.address,
			orgleader.leader 
		FROM
			t_sys_org sorg
			LEFT JOIN t_org_detail dtl ON sorg.org_id = dtl.org_id
			LEFT JOIN t_dict dict1 ON dtl.elct_Type = dict1.dict_id 
			AND dict1.record_flag = 1
			LEFT JOIN t_dict dict2 ON dtl.lead_time = dict2.dict_id 
			AND dict2.record_flag = 1
			LEFT JOIN t_dict dict3 ON sorg.org_type = dict3.dict_id 
			AND dict3.record_flag = 1
			LEFT JOIN t_tree_dict treedict ON dtl.org_address_relation = treedict.node_id 
			AND treedict.STATUS = '1'
			LEFT JOIN ( SELECT GROUP_CONCAT( user_name ) leader, org_id FROM t_org_leader_detail WHERE STATUS = '1' GROUP BY org_id ) orgleader ON sorg.org_id = orgleader.org_id 
		WHERE
			sorg.STATUS = '1' 
			AND dtl.STATUS = '1'
			<if test="isSuperAdmin != true">
				and instr(#{orgId},sorg.org_id)>0
			</if>
		UNION ALL
		SELECT
			org.org_id,
			org.org_nm,
			dict3.dict_name org_type,
			org.concat_persion,
			org.phone,
			org.found_time,
			org.is_dept,
			org.upper_org,
			org.root_org,
			treedict.node_nm org_address_relation,
			dict1.dict_name elct_Type,
			dict2.dict_name lead_time,
			dtl.current_leader_time,
			dtl.current_lead_out_time,
			dtl.elct_shoud_people_count,
			dtl.elct_act_people_count,
			dtl.upper_sure_org_count,
			dtl.act_upper_org_per_count,
			dtl.change_org_relation_auth,
			dtl.is_del_part_person_auth,
			dtl.org_job_phone,
			dtl.fix_phone,
			dtl.belong_area,
			dtl.trans_code,
			dtl.address,
			orgleader.leader 
		FROM
			t_sys_org org
			LEFT JOIN t_org_detail dtl ON org.org_id = dtl.org_id 
			AND dtl.STATUS = '1'
			LEFT JOIN t_dict dict1 ON dtl.elct_Type = dict1.dict_id 
			AND dict1.record_flag = 1
			LEFT JOIN t_dict dict2 ON dtl.lead_time = dict2.dict_id 
			AND dict2.record_flag = 1
			LEFT JOIN t_dict dict3 ON org.org_type = dict3.dict_id 
			AND dict3.record_flag = 1
			LEFT JOIN t_tree_dict treedict ON dtl.org_address_relation = treedict.node_id 
			AND treedict.STATUS = '1'
			LEFT JOIN ( SELECT GROUP_CONCAT( user_name ) leader, org_id FROM t_org_leader_detail WHERE STATUS = '1' GROUP BY org_id ) orgleader ON org.org_id = orgleader.org_id
			INNER JOIN org_cte sysorg ON org.org_id = sysorg.upper_org 
			AND org.STATUS = '1' 
			) SELECT DISTINCT
			ote.* 
		FROM
			org_cte ote 
			) UNION
			(
			WITH recursive org_cte AS (
		SELECT
			sorg.org_id,
			sorg.org_nm,
			dict3.dict_name org_type,
			sorg.concat_persion,
			sorg.phone,
			sorg.found_time,
			sorg.is_dept,
			sorg.upper_org,
			sorg.root_org,
			treedict.node_nm org_address_relation,
			dict1.dict_name elct_Type,
			dict2.dict_name lead_time,
			dtl.current_leader_time,
			dtl.current_lead_out_time,
			dtl.elct_shoud_people_count,
			dtl.elct_act_people_count,
			dtl.upper_sure_org_count,
			dtl.act_upper_org_per_count,
			dtl.change_org_relation_auth,
			dtl.is_del_part_person_auth,
			dtl.org_job_phone,
			dtl.fix_phone,
			dtl.belong_area,
			dtl.trans_code,
			dtl.address,
			orgleader.leader 
		FROM
			t_sys_org sorg
			LEFT JOIN t_org_detail dtl ON sorg.org_id = dtl.org_id
			LEFT JOIN t_dict dict1 ON dtl.elct_Type = dict1.dict_id 
			AND dict1.record_flag = 1
			LEFT JOIN t_dict dict2 ON dtl.lead_time = dict2.dict_id 
			AND dict2.record_flag = 1
			LEFT JOIN t_dict dict3 ON sorg.org_type = dict3.dict_id 
			AND dict3.record_flag = 1
			LEFT JOIN t_tree_dict treedict ON dtl.org_address_relation = treedict.node_id 
			AND treedict.STATUS = '1'
			LEFT JOIN ( SELECT GROUP_CONCAT( user_name ) leader, org_id FROM t_org_leader_detail WHERE STATUS = '1' GROUP BY org_id ) orgleader ON sorg.org_id = orgleader.org_id 
		WHERE
			sorg.STATUS = '1' 
			AND dtl.STATUS = '1'
			<if test="isSuperAdmin !=true">
				and instr(#{orgId},sorg.org_id)>0
			</if>
		UNION ALL
		SELECT
			org.org_id,
			org.org_nm,
			dict3.dict_name org_type,
			org.concat_persion,
			org.phone,
			org.found_time,
			org.is_dept,
			org.upper_org,
			org.root_org,
			treedict.node_nm org_address_relation,
			dict1.dict_name elct_Type,
			dict2.dict_name lead_time,
			dtl.current_leader_time,
			dtl.current_lead_out_time,
			dtl.elct_shoud_people_count,
			dtl.elct_act_people_count,
			dtl.upper_sure_org_count,
			dtl.act_upper_org_per_count,
			dtl.change_org_relation_auth,
			dtl.is_del_part_person_auth,
			dtl.org_job_phone,
			dtl.fix_phone,
			dtl.belong_area,
			dtl.trans_code,
			dtl.address,
			orgleader.leader 
		FROM
			t_sys_org org
			LEFT JOIN t_org_detail dtl ON org.org_id = dtl.org_id 
			AND dtl.STATUS = '1'
			LEFT JOIN t_dict dict1 ON dtl.elct_Type = dict1.dict_id 
			AND dict1.record_flag = 1
			LEFT JOIN t_dict dict2 ON dtl.lead_time = dict2.dict_id 
			AND dict2.record_flag = 1
			LEFT JOIN t_dict dict3 ON org.org_type = dict3.dict_id 
			AND dict3.record_flag = 1
			LEFT JOIN t_tree_dict treedict ON dtl.org_address_relation = treedict.node_id 
			AND treedict.STATUS = '1'
			LEFT JOIN ( SELECT GROUP_CONCAT( user_name ) leader, org_id FROM t_org_leader_detail WHERE STATUS = '1' GROUP BY org_id ) orgleader ON org.org_id = orgleader.org_id
			INNER JOIN org_cte sysorg ON sysorg.org_id = org.upper_org 
			AND org.STATUS = '1' 
			) SELECT DISTINCT
			ote.* 
		FROM
			org_cte ote 
			) 
			) t
			LEFT JOIN t_sys_org uprorg ON t.upper_org = uprorg.org_id
	</select>
	<select id="getUserIdByIdCard" resultType="java.lang.String">
		select user_id from t_user_dtl where id_card=#{idCard} and is_party='1'
	</select>
</mapper>