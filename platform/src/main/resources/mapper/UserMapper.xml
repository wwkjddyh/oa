<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oa.platform.repository.UserRepository" >

  <resultMap id="user" type="com.oa.platform.entity.User">
    <result column="user_id" property="userId" jdbcType="VARCHAR"/>
    <result column="user_type" property="userType" jdbcType="INTEGER"/>
    <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR"/>
    <result column="user_pwd_origi" property="userPwdOrigi" jdbcType="VARCHAR"/>
    <result column="user_nickname" property="userNickname" jdbcType="VARCHAR"/>
    <result column="record_flag" property="recordFlag" jdbcType="INTEGER"/>
    <result column="last_login_time" property="lastLoginTime" jdbcType="VARCHAR"/>
    <result column="record_time" property="recordTime" jdbcType="VARCHAR"/>
    <result column="update_time" property="updateTime" jdbcType="VARCHAR"/>
    <result column="lang_conf_id" property="langConfId" jdbcType="VARCHAR"/>
    <result column="third_party_type" property="thirdPartyType" jdbcType="VARCHAR"/>
    <result column="third_party_id" property="thirdPartyId" jdbcType="VARCHAR"/>
    <result column="user_sex" property="userSex" jdbcType="VARCHAR"/>
    <result column="lang_name" property="langName" jdbcType="VARCHAR"/>
    <result column="lang_code" property="langCode" jdbcType="VARCHAR"/>
    <result column="age" property="age" jdbcType="VARCHAR"/>
    <result column="party_age" property="partyAge" jdbcType="VARCHAR"/>
    <result column="gender" property="gender" jdbcType="VARCHAR"/>
    <result column="education" property="education" jdbcType="VARCHAR"/>
    <result column="org_id" property="orgId" jdbcType="VARCHAR"/>
    <result column="mail" property="mail" jdbcType="VARCHAR"/>
    <result column="phone" property="phone" jdbcType="VARCHAR"/>
  </resultMap>

  <resultMap id="userDtl" type="com.oa.platform.entity.UserDtl">
    <result column="user_id" property="userId" jdbcType="VARCHAR"/>
    <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    <result column="gender" property="gender" jdbcType="VARCHAR"/>
    <result column="phone" property="phone" jdbcType="VARCHAR"/>
    <result column="birth_time" property="birthTime" jdbcType="VARCHAR"/>
    <result column="nation" property="nation" jdbcType="VARCHAR"/>
    <result column="join_party_time" property="joinPartyTime" jdbcType="VARCHAR"/>
    <result column="turn_right_time" property="turnRightTime" jdbcType="VARCHAR"/>
    <result column="hometown" property="hometown" jdbcType="VARCHAR"/>
    <result column="bachelor" property="bachelor" jdbcType="VARCHAR"/>
    <result column="education" property="education" jdbcType="VARCHAR"/>
    <result column="office_number" property="officeNumber" jdbcType="VARCHAR"/>
    <result column="live_address" property="liveAddress" jdbcType="VARCHAR"/>
    <result column="mail" property="mail" jdbcType="VARCHAR"/>
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR"/>
    <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
    <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
    <result column="id_card" property="idCard" jdbcType="VARCHAR"/>
    <result column="is_leader" property="leader" jdbcType="VARCHAR"/>
    <result column="is_party" property="party" jdbcType="VARCHAR"/>
  </resultMap>

  <insert id="insert" parameterType="user">
    INSERT INTO t_user(user_id,user_type,user_name,user_pwd,user_pwd_origi,user_nickname,record_flag,record_time,
        lang_conf_id,third_party_type,third_party_id,user_sex)
    VALUES (#{userId},#{userType},#{userName},#{userPwd},#{userPwdOrigi},#{userNickname},#{recordFlag},NOW(),
        #{langConfId},#{thirdPartyType},#{thirdPartyId},#{userSex})
  </insert>

  <insert id="insertUserDtl" parameterType="userDtl">
    INSERT INTO t_user_dtl(
    	user_id,
		gender,
		phone,
		birth_time,
		nation,
		join_party_time,
		turn_right_time,
		hometown,
		bachelor,
		education,
		office_number,
		live_address,
		mail,
		image_url,
		id_card,
		is_leader,
		is_party,
		create_on,
		create_by
    )
    VALUES (
    #{userId},#{gender},#{phone},#{birthTime},#{nation},#{joinPartyTime},
    #{turnRightTime},#{hometown},#{bachelor},#{education},#{officeNumber},#{liveAddress},
    #{mail},#{imageUrl},#{idCard},#{leader},#{party},now(),#{createBy})
  </insert>

  <select id="selectUsers" resultMap="user">
      SELECT t1.user_id, t1.user_type, t1.user_name, t1.user_pwd, t1.user_nickname, t1.record_flag,
        DATE_FORMAT(t1.last_login_time,'%Y-%m-%d %H:%i:%s') last_login_time,
        DATE_FORMAT(t1.record_time,'%Y-%m-%d %H:%i:%s') record_time,
        DATE_FORMAT(t1.update_time,'%Y-%m-%d %H:%i:%s') update_time,
        t1.lang_conf_id, t1.third_party_type,t1.third_party_id,t1.user_sex,
				t2.`name` lang_name, t2.`code` lang_code
      FROM t_user t1 LEFT JOIN t_lang_conf t2 ON t1.lang_conf_id = t2.record_id
  </select>

  <select id="findById" parameterType="java.lang.String" resultMap="user">
    SELECT t1.user_id, t1.user_type, t1.user_name, t1.user_pwd, t1.user_nickname, t1.record_flag,
        DATE_FORMAT(t1.last_login_time,'%Y-%m-%d %H:%i:%s') last_login_time,
        DATE_FORMAT(t1.record_time,'%Y-%m-%d %H:%i:%s') record_time,
        DATE_FORMAT(t1.update_time,'%Y-%m-%d %H:%i:%s') update_time,
        t1.lang_conf_id, t1.third_party_type,t1.third_party_id,t1.user_sex,
				t2.`name` lang_name, t2.`code` lang_code
      FROM (select * FROM t_user WHERE user_id = #{userId}) t1 LEFT JOIN t_lang_conf t2 ON t1.lang_conf_id = t2.record_id
  </select>

  <select id="findDetailByUserId" parameterType="java.lang.String" resultMap="userDtl">
    SELECT 
    	user_id,
		gender,
		phone,
		birth_time,
		nation,
		join_party_time,
		turn_right_time,
		hometown,
		bachelor,
		education,
		office_number,
		live_address,
		mail,
		image_url,
		id_card,
		is_leader,
		is_party,
        DATE_FORMAT(create_on,'%Y-%m-%d %H:%i:%s') createOn,
        DATE_FORMAT(update_on,'%Y-%m-%d %H:%i:%s') updateOn
    FROM t_user_dtl WHERE user_id = #{userId}
  </select>

  <select id="findDetailByUserIds" parameterType="java.util.List" resultMap="userDtl">
    SELECT user_id,
		gender,
		phone,
		birth_time,
		nation,
		join_party_time,
		turn_right_time,
		hometown,
		bachelor,
		education,
		office_number,
		live_address,
		mail,
		image_url,
		id_card,
		is_leader,
		is_party,
        DATE_FORMAT(create_on,'%Y-%m-%d %H:%i:%s') createOn,
        DATE_FORMAT(update_on,'%Y-%m-%d %H:%i:%s') updateOn
    FROM t_user_dtl WHERE user_id IN
    <foreach collection="userIds" index="index" item="itemId" open="(" separator="," close=")">
      #{itemId}
    </foreach>
  </select>

  <!--根据用户名查询用户信息-->
  <select id="findUserByName" parameterType="java.lang.String" resultMap="user">
    SELECT t1.user_id, t1.user_type, t1.user_name, t1.user_pwd, t1.user_nickname, t1.record_flag,
        DATE_FORMAT(t1.last_login_time,'%Y-%m-%d %H:%i:%s') last_login_time,
        DATE_FORMAT(t1.record_time,'%Y-%m-%d %H:%i:%s') record_time,
        DATE_FORMAT(t1.update_time,'%Y-%m-%d %H:%i:%s') update_time,
        t1.lang_conf_id, t1.third_party_type,t1.third_party_id,t1.user_sex,
				t2.`name` lang_name, t2.`code` lang_code
      FROM (select * FROM t_user WHERE user_name = #{userName}) t1 LEFT JOIN t_lang_conf t2 ON t1.lang_conf_id = t2.record_id
  </select>

  <!--根据用户名和密码查询用户信息-->
  <select id="findUserByNameAndPwd" parameterType="java.util.Map" resultMap="user">
    SELECT t1.user_id, t1.user_type, t1.user_name, t1.user_pwd, t1.user_nickname, t1.record_flag,
        DATE_FORMAT(t1.last_login_time,'%Y-%m-%d %H:%i:%s') last_login_time,
        DATE_FORMAT(t1.record_time,'%Y-%m-%d %H:%i:%s') record_time,
        DATE_FORMAT(t1.update_time,'%Y-%m-%d %H:%i:%s') update_time,
        t1.lang_conf_id, t1.third_party_type,t1.third_party_id,t1.user_sex,
				t2.`name` lang_name, t2.`code` lang_code
      FROM (select * FROM t_user WHERE user_name = #{userName} AND user_pwd = #{userPwd}) t1
      LEFT JOIN t_lang_conf t2 ON t1.lang_conf_id = t2.record_id
  </select>

  <!--更新用户基本信息-->
  <update id="update" parameterType="user">
    UPDATE t_user
    <trim prefix="SET" suffixOverrides="," suffix=" WHERE user_id = #{userId}">
      <if test="userType != null and userType != ''">
        `user_type` = #{userType},
      </if>
      <if test="userName != null and userName != ''">
        `user_name` = #{userName},
      </if>
      <if test="userNickname != null and userNickname != ''">
        `user_nickname` = #{userNickname},
      </if>
      <if test="thirdPartyType != null and thirdPartyType != ''">
        `third_party_type` = #{thirdPartyType},
      </if>
      <if test="langConfId != null and langConfId != ''">
        `lang_conf_id` = #{langConfId},
      </if>
      <if test="thirdPartyType != null and thirdPartyType != ''">
        `third_party_type` = #{thirdPartyType},
      </if>
      <if test="thirdPartyId != null and thirdPartyId != ''">
        `third_party_id` = #{thirdPartyId},
      </if>
      <if test="userSex != null and userSex != ''">
        `user_sex` = #{userSex},
      </if>
      <if test="userPwdOrigi != null and userPwdOrigi != ''">
        user_pwd_origi = #{userPwdOrigi},
      </if>
      <if test="userPwd != null and userPwd != ''">
        user_pwd = #{userPwd},
      </if>
      <if test="lastLoginTime != null and lastLoginTime != ''">
        last_login_time = STR_TO_DATE(#{lastLoginTime},'%Y-%m-%d %H:%i:%s'),
      </if>
      <if test="updateTime != null and updateTime != ''">
        update_time = STR_TO_DATE(#{updateTime},'%Y-%m-%d %H:%i:%s'),
      </if>
      <if test="recordFlag != null">
        record_flag = #{recordFlag},
      </if>
    </trim>
  </update>

  <!--更新用户详细信息-->
  <update id="updateUserDtl" parameterType="userDtl">
    UPDATE t_user_dtl
    <trim prefix="SET" suffixOverrides="," suffix=" WHERE user_id = #{userId}">
      <if test="gender != null and gender != ''">
        gender = #{gender},
      </if>
      <if test="phone != null and phone != ''">
        phone = #{phone},
      </if>
      <if test="birthTime != null and birthTime != ''">
        birth_time = #{birthTime},
      </if>
      <if test="nation != null and nation != ''">
        nation = #{nation},
      </if>
      <if test="joinPartyTime != null and joinPartyTime != ''">
        join_party_time = #{joinPartyTime},
      </if>
      <if test="turnRightTime != null and turnRightTime != ''">
        turn_right_time = #{turnRightTime},
      </if>
      <if test="hometown != null and hometown != ''">
        hometown = #{hometown},
      </if>
      <if test="bachelor != null and bachelor != ''">
        bachelor = #{bachelor},
      </if>
      <if test="education != null and education != ''">
        education = #{education},
      </if>
      <if test="officeNumber != null and officeNumber != ''">
        office_number = #{officeNumber},
      </if>
      <if test="mail != null and mail != ''">
        mail = #{mail},
      </if>
      <if test="imageUrl != null and imageUrl != ''">
        image_url = #{imageUrl},
      </if>
      <if test="imageUrl == null or imageUrl == ''">
        image_url = null,
      </if>
      <if test="liveAddress != null and liveAddress != ''">
        live_address = #{liveAddress},
      </if>
      <if test="idCard != null and idCard != ''">
        id_card = #{idCard},
      </if>
      <if test="leader != null and leader != ''">
        is_leader = #{leader},
      </if>
      <if test="party != null and party != ''">
        is_party = #{party},
      </if>
      <if test="updateBy != null and updateBy != ''">
        update_by = #{updateBy},
        update_on = now(),
      </if>
      
    </trim>
  </update>
  <!--查询用户信息(分页)-->
  <select id="searchUsersByOrgIds"  resultMap="user">
    SELECT t.user_id, t.user_type, t.user_name, t.user_pwd, t.user_nickname, t.record_flag,
        DATE_FORMAT(t.last_login_time,'%Y-%m-%d %H:%i:%s') last_login_time,
        DATE_FORMAT(t.record_time,'%Y-%m-%d %H:%i:%s') record_time,
        DATE_FORMAT(t.update_time,'%Y-%m-%d %H:%i:%s') update_time,
        t.lang_conf_id, t.third_party_type,t.third_party_id,t.user_sex,
        t.lang_name, t.lang_code,dtl.gender,
        TIMESTAMPDIFF(YEAR,dtl.birth_time,DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%S')) age,
        TIMESTAMPDIFF(YEAR,dtl.join_party_time,DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%S')) party_age,
        dtl.education,orguser.org_id,dtl.mail,dtl.phone
    FROM (
      SELECT t1.user_id, t1.user_type, t1.user_name, t1.user_pwd, t1.user_nickname, t1.record_flag,
        t1.last_login_time,t1.record_time,t1.update_time,
        t1.lang_conf_id, t1.third_party_type,t1.third_party_id,t1.user_sex,
        t2.`name` lang_name, t2.`code` lang_code
      FROM t_user t1 LEFT JOIN t_lang_conf t2 ON t1.lang_conf_id = t2.record_id
    )t left join t_user_dtl dtl on t.user_id=dtl.user_id
    	left join t_org_user orguser on orguser.user_id=t.user_id and orguser.status='1'
    <trim prefix="WHERE" prefixOverrides="AND | OR">
    	and dtl.is_party='0'
    	<if test="isSuperAdmin != true">
    		and
    		<foreach collection="orgIds" index="index" item="itemId" open="(" separator="or" close=")">
		      instr(orguser.org_id,#{itemId})>0
		    </foreach>
    	</if>
      <if test="user.userId != null and user.userId != ''">
        AND t.user_id = #{user.userId}
      </if>
      <choose>
        <when test="user.isAdmin == '1'">
          AND t.user_type = 1
        </when>
        <otherwise>
          <choose>
            <when test="user.userType != null">
              AND t.user_type = #{user.userType}
            </when>
            <otherwise>
              AND t.user_type != 1
            </otherwise>
          </choose>
        </otherwise>
      </choose>
      <if test="user.key != null and user.key != ''">
        AND (UPPER(t.user_name) LIKE CONCAT('%',UPPER(#{user.key}),'%') OR UPPER(t.user_nickname) LIKE CONCAT('%',UPPER(#{user.key}),'%'))
      </if>
      <if test="user.userPwd != null and user.userPwd != ''">
        AND t.user_pwd = #{user.userPwd}
      </if>
      <if test="user.userName != null and user.userName != ''">
        AND t.user_name = #{user.userName}
      </if>
      <if test="user.userNickname != null and user.userNickname != ''">
        AND t.user_nickname = #{user.userNickname}
      </if>
      <if test="user.recordTime != null and user.recordTime != ''">
        AND DATE_FORMAT(t.record_time,'%Y-%m-%d') = #{user.recordTime}
      </if>
      <if test="user.lastLoginTime != null and user.lastLoginTime != ''">
        AND DATE_FORMAT(t.last_login_time,'%Y-%m-%d') = #{user.lastLoginTime}
      </if>
      <if test="user.updateTime != null and user.updateTime != ''">
        AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = #{user.updateTime}
      </if>
      <if test="user.recordFlag != null">
        AND t.record_flag = #{user.recordFlag}
      </if>
      <if test="user.langConfId != null">
        AND t.lang_conf_id = #{user.langConfId}
      </if>
      <if test="user.thirdPartyType != null and user.thirdPartyType != ''">
        AND t.third_party_type = #{user.thirdPartyType}
      </if>
      <if test="user.thirdPartyId != null and user.thirdPartyId != ''">
        AND t.third_party_id = #{user.thirdPartyId}
      </if>
      <if test="user.userSex != null and user.userSex != ''">
        AND t.user_sex = #{user.userSex}
      </if>
      <if test="user.ids != null and user.ids.size() > 0">
        AND t.user_id IN
        <foreach collection="user.ids" index="index" item="itemId" open="(" separator="," close=")">
          #{itemId}
        </foreach>
      </if>
    </trim>
  </select>
	<select id="find" parameterType="user" resultMap="user">
    SELECT t.user_id, t.user_type, t.user_name, t.user_pwd, t.user_nickname, t.record_flag,
        DATE_FORMAT(t.last_login_time,'%Y-%m-%d %H:%i:%s') last_login_time,
        DATE_FORMAT(t.record_time,'%Y-%m-%d %H:%i:%s') record_time,
        DATE_FORMAT(t.update_time,'%Y-%m-%d %H:%i:%s') update_time,
        t.lang_conf_id, t.third_party_type,t.third_party_id,t.user_sex,
        t.lang_name, t.lang_code,dtl.gender,
        TIMESTAMPDIFF(YEAR,dtl.birth_time,DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%S')) age,
        TIMESTAMPDIFF(YEAR,dtl.join_party_time,DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%S')) party_age,
        dtl.education,orguser.org_id
    FROM (
      SELECT t1.user_id, t1.user_type, t1.user_name, t1.user_pwd, t1.user_nickname, t1.record_flag,
        t1.last_login_time,t1.record_time,t1.update_time,
        t1.lang_conf_id, t1.third_party_type,t1.third_party_id,t1.user_sex,
        t2.`name` lang_name, t2.`code` lang_code
      FROM t_user t1 LEFT JOIN t_lang_conf t2 ON t1.lang_conf_id = t2.record_id
    )t left join t_user_dtl dtl on t.user_id=dtl.user_id
    	left join t_org_user orguser on orguser.user_id=t.user_id and orguser.status='1'
    <trim prefix="WHERE" prefixOverrides="AND | OR">
    	and dtl.is_party='0'
      <if test="userId != null and userId != ''">
        AND t.user_id = #{userId}
      </if>
      <choose>
        <when test="isAdmin == '1'">
          AND t.user_type = 1
        </when>
        <otherwise>
          <choose>
            <when test="userType != null">
              AND t.user_type = #{userType}
            </when>
            <otherwise>
              AND t.user_type != 1
            </otherwise>
          </choose>
        </otherwise>
      </choose>
      <if test="key != null and key != ''">
        AND (UPPER(t.user_name) LIKE CONCAT('%',UPPER(#{key}),'%') OR UPPER(t.user_nickname) LIKE CONCAT('%',UPPER(#{key}),'%'))
      </if>
      <if test="userPwd != null and userPwd != ''">
        AND t.user_pwd = #{userPwd}
      </if>
      <if test="userName != null and userName != ''">
        AND t.user_name = #{userName}
      </if>
      <if test="userNickname != null and userNickname != ''">
        AND t.user_nickname = #{userNickname}
      </if>
      <if test="recordTime != null and recordTime != ''">
        AND DATE_FORMAT(t.record_time,'%Y-%m-%d') = #{recordTime}
      </if>
      <if test="lastLoginTime != null and lastLoginTime != ''">
        AND DATE_FORMAT(t.last_login_time,'%Y-%m-%d') = #{lastLoginTime}
      </if>
      <if test="updateTime != null and updateTime != ''">
        AND DATE_FORMAT(t.update_time,'%Y-%m-%d') = #{updateTime}
      </if>
      <if test="recordFlag != null">
        AND t.record_flag = #{recordFlag}
      </if>
      <if test="langConfId != null">
        AND t.lang_conf_id = #{langConfId}
      </if>
      <if test="thirdPartyType != null and thirdPartyType != ''">
        AND t.third_party_type = #{thirdPartyType}
      </if>
      <if test="thirdPartyId != null and thirdPartyId != ''">
        AND t.third_party_id = #{thirdPartyId}
      </if>
      <if test="userSex != null and userSex != ''">
        AND t.user_sex = #{userSex}
      </if>
      <if test="ids != null and ids.size() > 0">
        AND t.user_id IN
        <foreach collection="ids" index="index" item="itemId" open="(" separator="," close=")">
          #{itemId}
        </foreach>
      </if>
    </trim>
  </select>
  <!-- 根据ID列表查询用户基本信息 -->
  <select id="findByIds" parameterType="java.util.List" resultMap="user">
    SELECT t1.user_id, t1.user_type, t1.user_name, t1.user_nickname, t1.record_flag,
        DATE_FORMAT(t1.last_login_time,'%Y-%m-%d %H:%i:%s') last_login_time,
        DATE_FORMAT(t1.record_time,'%Y-%m-%d %H:%i:%s') record_time,
        DATE_FORMAT(t1.update_time,'%Y-%m-%d %H:%i:%s') update_time,
        t1.lang_conf_id, t1.third_party_type,t1.third_party_id,t1.user_sex,
				t2.`name` lang_name, t2.`code` lang_code
      FROM (
        select * FROM t_user WHERE user_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      ) t1 LEFT JOIN t_lang_conf t2 ON t1.lang_conf_id = t2.record_id
  </select>
  <update id="resetPwd">
  	update t_user set user_pwd=#{userDefaultPwd} where user_id=#{userId}
  </update>
  <update id="updateUserEmailAndPhone">
  	update t_user_dtl set mail=#{mail},phone=#{phone} where user_id=#{userId}
  </update>
  <select id="getuserIdByUser" resultType="java.lang.String">
  		select usr.user_id from t_user usr left join t_user_dtl dtl on usr.user_id=dtl.user_id where
  			usr.user_name = #{userName} and usr.record_flag='1' and dtl.is_party='0'
  </select>
  <!-- 即时聊天用户数据 -->
  <insert id="saveImUserInfo">
  	INSERT INTO `leo-im`.`im_user` ( id, NAME, name_first_letter, nickname, salt, PASSWORD, locked, created_at )
	VALUES
		( #{userId}, #{userName}, 'c', #{nickName}, 'MOlssyhqweLKffidserewr==', '7D4667B6F08537AADD92740119EC54E7', 0, now( ) )
  </insert>
  <update id="updateImUserInfo">
  	update `leo-im`.`im_user` set name=#{userName},nickname=#{nickName} where id=#{userId}
  </update>
  <delete id="deleteImUserInfo">
  	delete from `leo-im`.`im_user` where id= #{userId}
  </delete>
</mapper>
